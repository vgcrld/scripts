#!/bin/bash

#export GALILEO_PORT="11131"
export GALILEO_LOG_FRIENDLY="1"
export GALILEO_URI="https://rdavis.core.galileosuite.com"
export GALILEO_USERNAME="rdavis"
export GALILEO_PASSWORD="Passw0rd1@"
export GALILEO_SITE="rdavis2"
export SSL_VERIFY=0

export OUTPUT=$HOME/gpe/p2files

alias mygpeadmin="gpeadmin.rb"
alias mygpefakefile='echo "gem.$(date +"%Y%m%d").$(date +"%H%M%S").$(date +"%Z").d60b21da185e11e682260894ef035c20.tsm.gz"'
alias mygperedordavis='cd ~/code/admin-cli && ./unlock_site && ./remove_site && ./add_site paid'
alias gpe='cd ~/code/gpe-server'
alias mygpepassenger='cd ~/code/gpe-server && GALILEO_LOG_FRIENDLY=1 bundle exec passenger start --min-instances=3 --port="${GALILEO_PORT}" ui'
alias mygpeuibuid='cd ~/code/gpe-server/ui/app && yarn clean && yarn install && yarn release'
<<<<<<< HEAD
alias ts='BUNDLE_GEMFILE=~/code/gpe-server/Gemfile OUTPUT=$HOME/p2files GALILEO_LOG_FRIENDLY=1 CUSTOMER=rdavis bundle exec test-single-file'
alias tso='BUNDLE_GEMFILE=~/code/gpe-server/Gemfile OUTPUT=$HOME/p2filesold GALILEO_LOG_FRIENDLY=1 CUSTOMER=rdavis bundle exec test-single-file'
=======
alias ts='BUNDLE_GEMFILE=~/code/gpe-server/Gemfile OUTPUT=$HOME/p2files GALILEO_LOG_FRIENDLY=1 CUSTOMER=${GALILEO_SITE} bundle exec test-single-file'
>>>>>>> fc62eaf5811657ff1538cb7dbc773c813fc19029
alias ll='ls -ltr'

export PATH=/users/rdavis/code/scripts:$PATH

bexec () {
  bundle exec --gemfile ~/code/gpe-server/Gemfile $*
}

mygperunetlbyname () {
  for i in $(ls ~/gpe/*/*.tsm.gz | cut -d. -f1 | uniq); do
    d=~/gpe/etl/$(echo $i | cut -d/ -f5)/$(echo $i | cut -d/ -f6).log
    mkdir -p "$(dirname $d)"
    echo "set +o noclobber; ts --no-batch $i.*.tsm.gz > $d 2>&1 &"
  done
}

mygpequeues () {
  cd ~/code/search_etl_table
  yarn start
}

mygpeexpand () {
  match=${1:-summary_extended}
  for i in *.tsm.gz; do
    echo $i
    eval "tar --wildcards -xOf $i '${match}*'"
  done
}


mygpeportforward-ch () {
  # CH and PXC forwarding
  kubectl port-forward --namespace default svc/core-clickhouse-default-1 8123 &
}

mygpeportforward-pxc () {
  # CH and PXC forwarding
  kubectl port-forward --namespace default svc/core-pxc                  3306 &
}

mygpetsmlastrun () {
  c=${1:-1}
  for i in $(mygpetsmlast $c); do
    eval "ts $i &"
  done
}

mygpetsmfirstrun () {
  c=${1:-1}
  for i in $(mygpetsmlast $c); do
    eval "ts $i &"
  done
}


mygpetsmlast () {
  c=${1:-1}
  for i in $(ls -d ~/gpe/*); do
    for i in $(ls $i/*.tsm.gz | cut -d. -f1 | uniq); do
      ls $i.*.tsm.gz | tail -"${c}"
    done
  done
}

mygpetsmfirst () {
  c=${1:-1}
  for i in $(ls -d ~/gpe/*); do
    for i in $(ls $i/*.tsm.gz | cut -d. -f1 | uniq); do
      ls $i.*.tsm.gz | head -"${c}"
    done
  done
}

mygpecleardirs () {
  rm -rf ~/gpe ~/p2files && mkdir ~/gpe ~/p2files/
}

ffile () {
  find ~/gpe -type f -name '*.gz' | sort  | grep -E "$1" | grep -v 'gpe.gz'
}

myetl () {
  if [ "$1" = '-x' ] ; then
    shift
    for i in $(ffile "$1");do eval "ts $i &"; done
  else
    for i in $(ffile "$1");do echo "ts $i &"; done
  fi
}

dirlist () {
  for i in *.gz
  do
    eval "tar -xOf $i '$1*'"
  done
}

function mygpefiledelete () {
  find ~/p2files/ -name '*.tsm.gpe.gz' -type f -exec rm {} \;
}

function mygpecreateviews () {
  BUNDLE_GEMFILE=$HOME/code/gpe-server/Gemfile
  bundle exec create-views  --site rdavis --execute
}

function mygpeedithelpers () {
  vi ~/code/my-bash-helpers
}

mygpeyarn () {
  cd ~/code/gpe-server/ui/app
  yarn install && yarn clean && yarn release
  cd ~/code/gpe-server/
  ./setup.sh testing
}

mygpes3mkpath () {
  prefix="s3://etl-x2gpe.galileosuite.com"
  echo "${prefix}/$1"
}

mygpes3get () {
  year=$(date +"%Y")
  month=$(date +"%m")
  day=$(date +"%d")

  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/Schonfeld/50479a5b-9b08-c45f-abd4-f4c709677ba5/${year}/${month}/${day}/" ~/gpe/schonfeld/tsm1500/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/Schonfeld/9e0fe4a2-e025-c88c-fcdb-c19ce44cfb35/${year}/${month}/${day}/" ~/gpe/schonfeld/tsm2500/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/Schonfeld/387b7540-b819-542b-b19d-f9ab977fdee4/${year}/${month}/${day}/" ~/gpe/schonfeld/tsm1600/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/Analysis_Group/4211b3db-cceb-fdd0-7b90-2315d61cf298/${year}/${month}/${day}/" ~/gpe/ag/tsm/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/DandH/870b246b-4a3d-2011-8454-df2cb2b1feec/${year}/${month}/${day}/" ~/gpe/dh/CORP-DR/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/VWR/3d7ef905-061b-1af7-bf14-2d24d40e9883/${year}/${month}/${day}/" ~/gpe/vwr/lxtsm1/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/VWR/c39710bb-c78e-1e78-7f81-61f22e32f19f/${year}/${month}/${day}/" ~/gpe/vwr/lxtsm2/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/VWR/9efc59d3-1693-75aa-4d54-c544ff21fbef/${year}/${month}/${day}/" ~/gpe/vwr/lxtsm3
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/atsgroup/0029f88e-57ce-5861-0299-a12ba31570f9/${year}/${month}/${day}/" ~/gpe/ats/protect1/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/Dept_REV/63cf2b7d-bb41-40ca-f635-73d3c075c20e/${year}/${month}/${day}/" ~/gpe/rev/rvssqtsm/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/Dept_LI/4b64733d-78e1-545a-f5aa-e119043bbf96/${year}/${month}/${day}/" ~/gpe/li/HBG-SP01/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/CFG/87993a2e-5816-7f68-81d3-d5f1b0e652a9/${year}/${month}/${day}/" ~/gpe/cfg/atltsm/
  echo "aws --profile prod s3 cp --recursive s3://etl-x2gpe.galileosuite.com/CFG/dc26c19a-f1ea-eecf-8e13-1c2d79f2b43c/${year}/${month}/${day}/" ~/gpe/cfg/tsm/
}

mygpetouch () {
  kubectl rollout restart deployment rdavis-gpe-server --context rdavis
}

mygperestartwatch () {
  kubectl rollout restart deployment core-ui-blue core-etl-x2gpe --context core
  kubectl rollout status -w  deployment core-etl-x2gpe --context core
  kubectl rollout status -w  deployment core-ui-blue --context core
}

mygpepod() {
  kubectl get pod --context rdavis | awk '/rdavis-gpe-server/{print $1}'
}

mygpepodgo () {
  kubectl exec --context rdavis -ti $(mygpepod) -- bash -i
}

mygpepodlog () {
  kubectl logs -f $(mygpepod) --context rdavis --tail=50
}

