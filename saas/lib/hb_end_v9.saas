hb_end_v9 () {

        #-------------------------------------------------------------
	# Setup the user
        #-------------------------------------------------------------
        set_parms "-orauser -rman_connect" $*

        #-------------------------------------------------------------
        # Let's switch to the oracle user and set the environment
        #-------------------------------------------------------------
        switch_user $orauser

        logIt "Set profile ${HOME}/.profile"
        . ${HOME}/.profile > /dev/null 2>&1
        set_RC $? stop

        #-------------------------------------------------------------
        # If ORACLE_SID is found then get the archive dir location
        #-------------------------------------------------------------
        if [[ -z ${ORACLE_SID} ]]
        then
                logIt "ERROR:The oracle SID is not set.  Check the environment."
                set_RC 1 stop
        fi

        SQLCMD 'archive log list;'

        arch_dest=`awk '/Archive destination/ { print $3 }' $SQLTEMP`
        arch_dest_mount=`df $arch_dest | awk '$7 ~ /\/.+/ {print $7}'`
        ctlcopy1=$arch_dest_mount/${ORACLE_SID}/ctl
        ctlcopy2=$arch_dest_mount/${ORACLE_SID}/startctl

        logIt "Archive log destination..........: $arch_dest"
        logIt "Archive log destination mount....: $arch_dest_mount"
        logIt "Bkup ctl file bkup destination...: $ctlcopy1"
        logIt "Bkup ctl file start destination..: $ctlcopy2"

        [[ ! -d $ctlcopy1 ]] && mkdir -p $ctlcopy1
        [[ ! -d $ctlcopy2 ]] && mkdir -p $ctlcopy2

        #-------------------------------------------------------------
	# Pull Tablespaces out of backup mode 
        #-------------------------------------------------------------
	ENDSQL=/tmp/END_BACKUP_SQL_${JOB}.sql 
	SQLCMD "select 'alter tablespace '||TABLESPACE_NAME||' end backup;' from dba_tablespaces where contents <> 'TEMPORARY';"
        grep -E '^alter tablespace' $SQLTEMP > $ENDSQL
        SQLCMD "@${ENDSQL}"   
        set_RC $? stop

        #-------------------------------------------------------------
	# Make sure all are out of backup-mode 
        #-------------------------------------------------------------
	SQLCMD "select 'STILL_IN_BACKUP_MODE '||count(STATUS)  from v\$backup where status = 'ACTIVE';"

	grep STILL_IN_BACKUP_MODE $SQLTEMP | while read NOTGOOD
        do
                export FILES_IN_BU_MODE="`echo ${NOTGOOD} | awk '{ print $2 }'`"
        done

	if [[ ${FILES_IN_BU_MODE} -gt 0 ]]
	then
   		logIt "There are still files in backup mode, please check, script will stop" 
		logIt "Commands executed:"
		set_RC 2 stop
	else
   		logIt "All files are taken OUT of backup mode, no issues." 
	fi

        #-------------------------------------------------------------
	# Cleanup the sql command file
        #-------------------------------------------------------------
	rm ${ENDSQL}

        #-------------------------------------------------------------
        # Switch the log File and make current
        #-------------------------------------------------------------
        logIt "${ORACLE_SID}: Switch logfile"
        SQLCMD 'alter system switch logfile;'
        set_RC $? stop

        logIt "${ORACLE_SID}: Archive log current"
        SQLCMD 'alter system archive log current;'
        set_RC $? stop

        #-------------------------------------------------------------
        # List the archive logs
        #-------------------------------------------------------------
        logIt "${ORACLE_SID}: List archive log detail"
        SQLCMD 'archive log list;'
        set_RC $? stop
        cat $SQLTEMP > $LOG_PATH/${ORACLE_SID}.logseq

        #-------------------------------------------------------------
        # Capture data
        #-------------------------------------------------------------
        env | awk '/^PATH=/ { print "export "$0 }' > $LOG_PATH/${ORACLE_SID}.env
        env | awk '/^ORACLE_HOME=/ { print "export "$0 }' >> $LOG_PATH/${ORACLE_SID}.env
        env | awk '/^ORACLE_SID=/ { print "export "$0 }' >> $LOG_PATH/${ORACLE_SID}.env
        env | awk '/^TNS_ADMIN=/ { print "export "$0 }' >> $LOG_PATH/${ORACLE_SID}.env
        env | awk '/^LIBPATH/ { print "export "$0 }' >> $LOG_PATH/${ORACLE_SID}.env
        env | awk '/^LD_LIBRARY_PATH/ { print "export "$0 }' >> $LOG_PATH/${ORACLE_SID}.env
        echo export CTLCOPY1=$ctlcopy1/controlfile.ctl >> $LOG_PATH/${ORACLE_SID}.env
        echo export CTLCOPY2=$ctlcopy2/controlfile.ctl >> $LOG_PATH/${ORACLE_SID}.env

        #-------------------------------------------------------------
        # Resync the recovery catalog
        #-------------------------------------------------------------
        logIt "${ORACLE_SID}: Resync the recovery catalog"
        RMANCMD 'resync catalog;'
        set_RC $? stop

        #-------------------------------------------------------------
        # Backup the control files
        #-------------------------------------------------------------
        logIt "${ORACLE_SID}: Create a copy of the controlfile"
        RMANCMD "RUN
                {allocate channel foo type disk;
                copy current controlfile to '$ctlcopy1/controlfile.ctl';
                copy current controlfile to '$ctlcopy2/controlfile.ctl';
                release channel foo;}"
        set_RC $? stop

        # Added to help with spfile null issue while it's being remediated
        sleep 120

}
